// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  Session       Session[]
  Account       Account?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        String    @id
  createdAt DateTime  @default(now())
  title     String    @unique
  products  Product[]
}

model Product {
  id        String    @id
  createdAt DateTime  @default(now())
  title     String
  img       String?
  buyPrice  Decimal
  sellPrice Decimal
  stock     Int
  minStock  Int
  category  Category? @relation(fields: [catTitle], references: [title])
  catTitle  String?
}

model Expense {
  id        String   @id
  createdAt DateTime @default(now())
  date      DateTime
  desc      String
  nominal   Decimal
  Report    Report?  @relation(fields: [reportId], references: [id])
  reportId  String?
}

model Purchase {
  id         String   @id
  createdAt  DateTime @default(now())
  date       DateTime
  totalItem  Int
  totalPrice Decimal
  products   Json
}

model Transaction {
  id               String   @id
  createdAt        DateTime @default(now())
  products         Json
  totalItem        Int
  grossProfit      Decimal
  totalTransaction Decimal
  cash             Decimal
  change           Decimal
  Report           Report?  @relation(fields: [reportId], references: [id])
  reportId         String?
}

model Report {
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  date        DateTime
  transaction Transaction[]
  expense     Expense[]
  grossProfit Decimal
  netProfit   Decimal
}
